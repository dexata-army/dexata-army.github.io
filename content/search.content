<!-- Wrapper -->
<div id="wrapper">
	<!-- One -->
	<section id="one" class="wrapper style1">
		<div class="inner">
			<div class="spotlights">
				<center>
					<div class="spotlight" style="max-width:500px; margin-bottom: 50px">
						<div class="content">
							<h1><i class="fas fa-search fa-4x" style="vertical-align:middle"></i><br><noselect>Search</noselect></h1>
						</div>
					</div>

					<center>
						<select name="network_select" id="network_select" style="width:170px" onchange="change_search_network()">
							<option disabled selected hidden>network</option>
							<option value="algorand">algorand</option>
							<option value="arbitrum-one">arbitrum-one</option>
							<option value="avalanche">avalanche</option>
							<option value="binance-smart-chain">bsc</option>
							<option value="cosmos">cosmos</option>
							<option value="ethereum">ethereum</option>
							<option value="factom">factom</option>
							<option value="fantom">fantom</option>
							<option value="harmony-shard-0">harmony</option>
							<option value="iotex">iotex</option>
							<option value="kava">kava</option>
							<option value="komodo">komodo</option>
							<option value="kusama">kusama</option>
							<option value="mdex">mdex</option>
							<option value="moonriver">moonriver</option>
							<option value="nuls">nuls</option>
							<option value="polkadot">polkadot</option>
							<option value="polygon">polygon</option>
							<option value="solana">solana</option>
							<option value="stellar">stellar</option>
							<option value="telos">telos</option>
							<option value="terra">terra</option>
						</select>
					</center>
					<input id="contract_input" placeholder="contract" style="margin-top:10px"><br><br>

					<input id="search_input" placeholder="search" style="margin-bottom:15px"><br>

					<div id="table_spotlight" class="spotlight" style="max-width:100%; display: none">
						<div id="table_div" class="xscroll">
							<div id="no_results_msg" style=""></div>
							<img id="loading_gif" src="@pathtofile(output/images/loading.gif)" style="margin-top: 20px; max-width: 150px">
							<table id="coins_table" style="display: none">
								<thead>
									<tr>
										<th><a onclick="toggle_sort('rank')">rank</a></th>
										<th></th>
										<th><a onclick="toggle_sort('symbol')">symbol</a></th>
										<th><a onclick="toggle_sort('name')">name</a></th>
										<th><a onclick="toggle_sort('current_price')">price</a></th>
										<th id="change_hour_row_head"><a onclick="toggle_sort('price_change_percentage_1h_in_currency')">hour</a></th>
										<th id="change_day_row_head"><a onclick="toggle_sort('price_change_percentage_24h')">day</a></th>
										<th id="change_week_row_head"><a onclick="toggle_sort('price_change_percentage_7d_in_currency')">week</a></th>
										<th id="change_month_row_head"><a onclick="toggle_sort('price_change_percentage_30d_in_currency')">month</a></th>
										<th id="change_year_row_head"><a onclick="toggle_sort('price_change_percentage_1y_in_currency')">year</a></th>
										<th><a onclick="toggle_sort('market_cap')">market cap</a></th>
										<th><a onclick="toggle_sort('total_volume')">volume</a></th>
									</tr>
								</thead>
								<tfoot>
									<tr>
										<th><a onclick="toggle_sort('rank')">rank</a></th>
										<th></th>
										<th><a onclick="toggle_sort('symbol')">symbol</a></th>
										<th><a onclick="toggle_sort('name')">name</a></th>
										<th><a onclick="toggle_sort('current_price')">price</a></th>
										<th id="change_hour_row_foot"><a onclick="toggle_sort('price_change_percentage_1h_in_currency')">hour</a></th>
										<th id="change_day_row_foot"><a onclick="toggle_sort('price_change_percentage_24h')">day</a></th>
										<th id="change_week_row_foot"><a onclick="toggle_sort('price_change_percentage_7d_in_currency')">week</a></th>
										<th id="change_month_row_foot"><a onclick="toggle_sort('price_change_percentage_30d_in_currency')">month</a></th>
										<th id="change_year_row_foot"><a onclick="toggle_sort('price_change_percentage_1y_in_currency')">year</a></th>
										<th><a onclick="toggle_sort('market_cap')">market cap</a></th>
										<th><a onclick="toggle_sort('total_volume')">volume</a></th>
									</tr>
								</tfoot>
							</table>
						</div>
					</div>
					<noselect id="page_controls">
						<a id="prev_page_link" onclick="prev_page(); document.getElementById('table_div').scrollIntoView();" style="visibility: hidden;"><i class="fas fa-arrow-circle-left fa-3x" style="vertical-align: middle"></i></a> &nbsp;&nbsp;
						<input id="page_input" style="width: 75px; vertical-align: middle; visibility: hidden"> &nbsp;&nbsp;
						<a id="next_page_link" onclick="next_page(); document.getElementById('table_div').scrollIntoView();" style="visibility: hidden"><i class="fas fa-arrow-circle-right fa-3x" style="vertical-align: middle"></i></a>
					</noselect>
				</center>
			</div>
		</div>
	</section>
</div>

<script>
	var search_network = "bsc";

	var page_no = 1;
	var no_pages = 0;
	var refresh_ms = 60000;

	var sort_attrib = 'market_cap';
	var sort_dir = -1;
	var coins_data;
	var all_coins_data;

	var ids;

	window.addEventListener('keydown',this.keydown,false);
	//window.addEventListener('keyup',this.keyup,false);

	if(localStorage.getItem(user + '-refresh_sec'))
		refresh_ms = 1000*localStorage.getItem(user + '-refresh_sec');
	else
		localStorage.setItem(user + '-refresh_sec', 60);

	if(localStorage.getItem(user + '-search_network'))
		search_network = localStorage.getItem(user + '-search_network');
	else
		localStorage.setItem(user + '-search_network', 'bsc');

	document.getElementById('network_select').value = search_network;

		if(!localStorage.getItem(user + "-change_hour") &&
	   !localStorage.getItem(user + "-change_day") &&
	   !localStorage.getItem(user + "-change_week") &&
	   !localStorage.getItem(user + "-change_month") &&
	   !localStorage.getItem(user + "-change_year"))
	{
		localStorage.setItem(user + "-change_hour", true);
		localStorage.setItem(user + "-change_day", true);
		localStorage.setItem(user + "-change_week", true);
		localStorage.setItem(user + "-change_month", true);
		localStorage.setItem(user + "-change_year", true);
	}

	if(!localStorage.getItem(user + "-change_hour"))
	{
		document.getElementById('change_hour_row_head').style.display = "none";
		document.getElementById('change_hour_row_foot').style.display = "none";
	}

	if(!localStorage.getItem(user + "-change_day"))
	{
		document.getElementById('change_day_row_head').style.display = "none";
		document.getElementById('change_day_row_foot').style.display = "none";
	}

	if(!localStorage.getItem(user + "-change_week"))
	{
		document.getElementById('change_week_row_head').style.display = "none";
		document.getElementById('change_week_row_foot').style.display = "none";
	}

	if(!localStorage.getItem(user + "-change_month"))
	{
		document.getElementById('change_month_row_head').style.display = "none";
		document.getElementById('change_month_row_foot').style.display = "none";
	}

	if(!localStorage.getItem(user + "-change_year"))
	{
		document.getElementById('change_year_row_head').style.display = "none";
		document.getElementById('change_year_row_foot').style.display = "none";
	}

	function change_search_network()
	{
		search_network = document.getElementById('network_select').value;
		localStorage.setItem(user + '-search_network', search_network);
	}

	function clear_table()
	{
		var table = document.getElementById("coins_table");

		var no_rows = table.rows.length-2;
		for(var i=0; i < no_rows; i++)
			table.deleteRow(1);		
	}

	function draw_table()
	{
		clear_table();
		var table = document.getElementById("coins_table");
		document.getElementById("page_input").value = page_no;

		document.getElementById('loading_gif').style.visibility = "hidden";
		document.getElementById('loading_gif').style.display = "none";
		document.getElementById("coins_table").style.display = "inline";

		for(var i=0; i<coins_data.length; i++)
		{
			var row = table.insertRow(i+1);
			row.insertCell(0).innerHTML = coins_data[i]['market_cap_rank'];
			if(coins_data[i]['image'] != "")
				row.insertCell(1).innerHTML = "<img style='min-width: 23px; max-height: 23px; vertical-align:middle' class='rounded' onerror='this.style.display=\"none\"' src='" + coins_data[i]['image'] + "'>";
			row.insertCell(2).innerHTML = coins_data[i]['symbol'];
			row.insertCell(3).innerHTML = "<a href='@pathto(coin)?id=" + coins_data[i]['id'] + "'>" + coins_data[i]['name'] + "</a>";

			if(coins_data[i]['current_price'] == null || coins_data[i]['current_price'] == 0)
				row.insertCell(4).innerHTML = "-";
			else if(coins_data[i]['current_price'] > 1)
				row.insertCell(4).innerHTML = "$" + parseFloat(coins_data[i]['current_price']).toLocaleString('en') ;
			else if(coins_data[i]['current_price'] > 0 && coins_data[i]['current_price'] < 0.0001)
				row.insertCell(4).innerHTML = "$" + parseFloat(coins_data[i]['current_price']).toExponential(3) ;
			else
				row.insertCell(4).innerHTML = "$" + coins_data[i]['current_price'].toFixed(3);

			if(localStorage.getItem(user + '-change_hour'))
			{
				if(coins_data[i]['price_change_percentage_1h_in_currency'] == null)
					row.insertCell(5).innerHTML = "-";
				else if(parseFloat(coins_data[i]['price_change_percentage_1h_in_currency']) < 0)
					row.insertCell(5).innerHTML = "<red>" + parseFloat(coins_data[i]['price_change_percentage_1h_in_currency']).toLocaleString('en') + "%</red>";
				else
					row.insertCell(5).innerHTML = "<green>" + parseFloat(coins_data[i]['price_change_percentage_1h_in_currency']).toLocaleString('en') + "%</green>";
			}
			else
				row.insertCell(5);

			if(localStorage.getItem(user + '-change_day'))
			{
				if(coins_data[i]['price_change_percentage_24h'] == null)
					row.insertCell(6).innerHTML = "-";
				else if(parseFloat(coins_data[i]['price_change_percentage_24h']) < 0)
					row.insertCell(6).innerHTML = "<red>" + parseFloat(coins_data[i]['price_change_percentage_24h']).toLocaleString('en') + "%</red>";
				else
					row.insertCell(6).innerHTML = "<green>" + parseFloat(coins_data[i]['price_change_percentage_24h']).toLocaleString('en') + "%</green>";
			}
			else
				row.insertCell(6);

			if(localStorage.getItem(user + '-change_week'))
			{
				if(coins_data[i]['price_change_percentage_7d_in_currency'] == null)
					row.insertCell(7).innerHTML = "-";
				else if(parseFloat(coins_data[i]['price_change_percentage_7d_in_currency']) < 0)
					row.insertCell(7).innerHTML = "<red>" + parseFloat(coins_data[i]['price_change_percentage_7d_in_currency']).toLocaleString('en') + "%</red>";
				else
					row.insertCell(7).innerHTML = "<green>" + parseFloat(coins_data[i]['price_change_percentage_7d_in_currency']).toLocaleString('en') + "%</green>";
			}
			else
				row.insertCell(7);

			if(localStorage.getItem(user + '-change_month'))
			{
				if(coins_data[i]['price_change_percentage_30d_in_currency'] == null)
					row.insertCell(8).innerHTML = "-";
				else if(parseFloat(coins_data[i]['price_change_percentage_30d_in_currency']) < 0)
					row.insertCell(8).innerHTML = "<red>" + parseFloat(coins_data[i]['price_change_percentage_30d_in_currency']).toLocaleString('en') + "%</red>";
				else
					row.insertCell(8).innerHTML = "<green>" + parseFloat(coins_data[i]['price_change_percentage_30d_in_currency']).toLocaleString('en') + "%</green>";
			}
			else
				row.insertCell(8);

			if(localStorage.getItem(user + '-change_year'))
			{
				if(coins_data[i]['price_change_percentage_1y_in_currency'] == null)
					row.insertCell(9).innerHTML = "-";
				else if(parseFloat(coins_data[i]['price_change_percentage_1y_in_currency']) < 0)
					row.insertCell(9).innerHTML = "<red>" + parseFloat(coins_data[i]['price_change_percentage_1y_in_currency']).toLocaleString('en') + "%</red>";
				else
					row.insertCell(9).innerHTML = "<green>" + parseFloat(coins_data[i]['price_change_percentage_1y_in_currency']).toLocaleString('en') + "%</green>";
			}
			else
				row.insertCell(9);

			if(coins_data[i]['market_cap'] > 0)
				row.insertCell(10).innerHTML = "$" + parseFloat(coins_data[i]['market_cap']).toLocaleString('en') ;
			else
				row.insertCell(10).innerHTML = "-";

			if(coins_data[i]['total_volume'] > 0)
				row.insertCell(11).innerHTML = "$" + coins_data[i]['total_volume'].toLocaleString('en') ;
			else
				row.insertCell(11).innerHTML = "-";

			if(!localStorage.getItem(user + '-change_year'))
				row.deleteCell(9);
			if(!localStorage.getItem(user + '-change_month'))
				row.deleteCell(8);
			if(!localStorage.getItem(user + '-change_week'))
				row.deleteCell(7);
			if(!localStorage.getItem(user + '-change_day'))
				row.deleteCell(6);
			if(!localStorage.getItem(user + '-change_hour'))
				row.deleteCell(5);
		}

		document.getElementById('table_spotlight').style.width = (document.getElementById('coins_table').offsetWidth + 70) + "px";
	}

	function sort_data()
	{
		if(sort_attrib == "symbol" || sort_attrib == "name")
		{
			coins_data.sort(function(obj1, obj2) {
				if(obj1[sort_attrib].toLowerCase() > obj2[sort_attrib].toLowerCase())
					return sort_dir*1;
				else if(obj1[sort_attrib] == obj2[sort_attrib])
					return 0;
				else return sort_dir*-1;
			});
		}
		else
		{
			coins_data.sort(function(obj1, obj2) {
				return sort_dir*(obj1[sort_attrib] - obj2[sort_attrib]);
			});
		}

		draw_table();
	}

	function toggle_sort(attrib)
	{
		if(sort_attrib == attrib)
			sort_dir *= -1;
		else
		{
			sort_attrib = attrib;
			sort_dir = -1;
		}

		sort_data();
	}

	function fetch_table_coingecko()
	{
		//alert('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=' + ids.join(',') + '&order=market_cap_desc&per_page=50&page=' + page_no + '&sparkline=false&price_change_percentage=1h,24h,7d,30d,1y');
		$(document).ready(function(){
			$.get(
	    	    'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=' + ids.join(',') + '&order=market_cap_desc&per_page=50&page=' + page_no + '&sparkline=false&price_change_percentage=1h,24h,7d,30d,1y',              
				function(data) {
					coins_data = data;

					if(sort_attrib == "market_cap" && sort_dir == -1)
						draw_table();
					else
						sort_data();
			}).fail(function() {
				clear_table();
				document.getElementById('loading_gif').style.visibility = "hidden";
				document.getElementById('loading_gif').style.display = "none";
				document.getElementById("table_spotlight").style.width = "600px";

				alert("failed to fetch coins information, please try again");
			});
		});
	}

	function refresh_table()
	{
		if(refresh_ms > 0)
			sleep(refresh_ms).then(() => { fetch_table_coingecko(); refresh_table(); });
	}

	function prev_page()
	{
		if(page_no + 1 > no_pages)
			document.getElementById('next_page_link').style.visibility = "visible";

		if(page_no > 1)
		{
			page_no--;
			fetch_table_coingecko();

			if(page_no == 1)
				document.getElementById('prev_page_link').style.visibility = "hidden";
		}
	}

	function next_page()
	{
		if(page_no == 1)
			document.getElementById('prev_page_link').style.visibility = "visible";

		if(page_no + 1 <= no_pages)
		{
			page_no++;
			fetch_table_coingecko();

			if(page_no + 1 > no_pages)
				document.getElementById('next_page_link').style.visibility = "hidden";
		}
	}

	function goto_page()
	{
		if(page_no == 1)
			document.getElementById('prev_page_link').style.visibility = "visible";
		else if(page_no == no_pages)
			document.getElementById('next_page_link').style.visibility = "visible";

		page_no = document.getElementById('page_input').value;

		if(page_no > no_pages)
		{
			document.getElementById('page_input').value = no_pages;
			page_no = no_pages;
		}
		else if(page_no < 1)
		{
			document.getElementById('page_input').value = 1;
			page_no = 1;
		}

		if(page_no == 1)
			document.getElementById('prev_page_link').style.visibility = "hidden";
		else if(page_no == no_pages)
			document.getElementById('next_page_link').style.visibility = "hidden";

		fetch_table_coingecko();
	}

	function search_coins()
	{
		page_no = 1;
		ids = [];
		var no_coins_found = 0;

		var search_term = document.getElementById("search_input").value.toLowerCase();

		if(search_term == "")
		{
			alert("no search term provided");
			return;
		}

		document.getElementById('table_spotlight').style.display = "block";
		document.getElementById('coins_table').style.display = "none";
		document.getElementById('next_page_link').style.visibility = "visible";
		document.getElementById('page_input').style.visibility = "visible";
		document.getElementById('prev_page_link').style.visibility = "hidden";
		document.getElementById('no_results_msg').style.display = "none";
		document.getElementById('loading_gif').style.visibility = "visible";
		document.getElementById('loading_gif').style.display = "block";

		for(var i=0; i<all_coins_data.length; i++)
		{
			if(all_coins_data[i]['symbol'] == search_term ||
				all_coins_data[i]['name'] == search_term ||
				all_coins_data[i]['id'] == search_term)
			{
				no_coins_found++; 

				ids.unshift(all_coins_data[i]['id']);
			}
			else if(all_coins_data[i]['symbol'].toLowerCase().search(search_term) != -1 ||
				all_coins_data[i]['name'].toLowerCase().search(search_term) != -1 ||
				all_coins_data[i]['id'].toLowerCase().search(search_term) != -1)
			{
				no_coins_found++;

				ids.push(all_coins_data[i]['id']);
			}
		}

		if(no_coins_found > 0)
		{
			var max_no_results = 400;

			if(no_coins_found > max_no_results)
			{
				ids.splice(max_no_results, no_coins_found-max_no_results);
				no_coins_found = max_no_results;
			}

			no_pages = Math.ceil(no_coins_found/50);
			if(no_pages == 1)
			{
				document.getElementById('next_page_link').style.visibility = "hidden";
				document.getElementById('page_input').style.visibility = "hidden";
			}

			fetch_table_coingecko();
			//refresh_table();
		}
		else
		{
			document.getElementById('loading_gif').style.visibility = "hidden";
			document.getElementById('loading_gif').style.display = "none";
			document.getElementById("coins_table").style.display = "none";
			document.getElementById('table_spotlight').style.width = "500px";
			document.getElementById('no_results_msg').innerHTML = "<p style='margin-top: 20px; margin-bottom: 10px'>No coins found for '" + search_term + "'</p>";
			document.getElementById('no_results_msg').style.display = "inline";
		}
	}

	function fetch_coins_list()
	{
		$(document).ready(function(){
			$.get(
	    	    'https://api.coingecko.com/api/v3/coins/list',              
				function(data) {
					all_coins_data = data;
					if(document.getElementById('search_input').value != "")
					{
						clear_table();
						search_coins();
						document.getElementById("search_input").scrollIntoView();
					}
			}).fail(function() {
				clear_table();
				document.getElementById('loading_gif').style.visibility = "hidden";
				document.getElementById('loading_gif').style.display = "none";
				document.getElementById("table_spotlight").style.width = "600px";

				document.getElementById("table_div").innerHTML = "<p style='margin-top: 20px; margin-bottom: 10px'>failed to fetch coins information, please refresh to try again.</p>";
			});
		});
	}

	function keydown(e)
	{
		var code = e.keyCode;
		
		if(document.activeElement.tagName == "INPUT")
		{
			if(code == 13)
			{
				if(document.activeElement.id == "page_input")
					goto_page();
				else if(document.activeElement.id == "contract_input")
					window.location.href = "@pathto(coin)?network=" + search_network + "&contract_address=" + document.getElementById('contract_input').value;
				else if(document.activeElement.id == "search_input")
				{
					clear_table();
					sleep(50).then(() => { search_coins() });
				}
			}
		}
		else
		{
			switch (code) 
			{
				
				case 37: prev_page(); break; //Left key
				case 39: next_page(); break; //Right key
			}
		}
	}

	if(param_map.get('term') != undefined)
		document.getElementById('search_input').value = param_map.get('term');

	document.getElementById('table_spotlight').style.width = (document.getElementById('loading_gif').offsetWidth + 400) + "px";

	fetch_coins_list();
			
</script>
